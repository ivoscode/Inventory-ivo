{"version":3,"sources":["components/Header.js","helpers.js","components/Order.js","components/AddItemForm.js","components/EditItemForm.js","components/Inventory.js","sample-items .js","components/Item.js","base.js","components/App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","formatPrice","cents","toLocaleString","style","currency","Order","renderOrder","key","item","_this","props","items","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","react_transition_group","component","name","price","onClick","removeFromOrder","_this2","this","orderIds","Object","keys","total","reduce","prevTotal","map","React","Component","AddItemForm","nameRef","createRef","priceRef","statusRef","descRef","imageRef","createItem","event","preventDefault","current","value","parseFloat","desc","image","addItem","currentTarget","reset","onSubmit","ref","type","placeholder","EditItemForm","handleChange","console","log","updatedItem","objectSpread","defineProperty","updateItem","index","onChange","deleteItem","Inventory","components_AddItemForm","components_EditItemForm","pizza1","pizza2","pizza3","pizza4","pizza5","pizza6","pizza7","pizza8","pizza9","Item","_this$props$details","details","src","alt","disabled","addToOrder","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","App","state","concat","Date","now","setState","loadSampleItems","sampleItems","syncState","context","removeBinding","components_Header","components_Item","components_Order","components_Inventory","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yLAQeA,EANA,kBACbC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,OAChBH,EAAAC,EAAAC,cAAA,2BCJG,SAASE,EAAYC,GAC1B,OAAQA,EAAQ,KAAKC,eAAe,QAAS,CAC3CC,MAAO,WACPC,SAAU,oBCyECC,6MAvEbC,YAAc,SAAAC,GACZ,IAAMC,EAAOC,EAAKC,MAAMC,MAAMJ,GACxBK,EAAQH,EAAKC,MAAMG,MAAMN,GACzBO,EAAcN,GAAwB,cAAhBA,EAAKO,OAC3BC,EAAoB,CACxBC,WAAY,QACZV,MACAW,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAG/B,OAAKZ,EAEAM,EAUHlB,EAAAC,EAAAC,cAACuB,EAAA,cAAkBL,EACjBpB,EAAAC,EAAAC,cAAA,MAAIS,IAAKA,GACPX,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACuB,EAAA,gBAAD,CAAiBC,UAAU,OAAOvB,UAAU,SAC1CH,EAAAC,EAAAC,cAACuB,EAAA,cAAD,CACEJ,WAAW,QACXV,IAAKK,EACLM,QAAS,CAAEC,MAAO,IAAKC,KAAM,MAE7BxB,EAAAC,EAAAC,cAAA,YAAOc,KAPb,MAUMJ,EAAKe,KACRvB,EAAYY,EAAQJ,EAAKgB,OAC1B5B,EAAAC,EAAAC,cAAA,UAAQ2B,QAAS,kBAAMhB,EAAKC,MAAMgB,gBAAgBnB,KAAlD,WAtBJX,EAAAC,EAAAC,cAACuB,EAAA,cAAkBL,EACjBpB,EAAAC,EAAAC,cAAA,MAAIS,IAAKA,GAAT,SACSC,EAAOA,EAAKe,KAAO,OAD5B,4BALY,8EAkCX,IAAAI,EAAAC,KACDC,EAAWC,OAAOC,KAAKH,KAAKlB,MAAMG,OAClCmB,EAAQH,EAASI,OAAO,SAACC,EAAW3B,GACxC,IAAMC,EAAOmB,EAAKjB,MAAMC,MAAMJ,GACxBK,EAAQe,EAAKjB,MAAMG,MAAMN,GAE/B,OADoBC,GAAwB,cAAhBA,EAAKO,OAExBmB,EAAYtB,EAAQJ,EAAKgB,MAE3BU,GACN,GACH,OACEtC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAACuB,EAAA,gBAAD,CAAiBC,UAAU,KAAKvB,UAAU,SACvC8B,EAASM,IAAIP,KAAKtB,cAErBV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAAf,SAEEH,EAAAC,EAAAC,cAAA,cAASE,EAAYgC,aAjEXI,IAAMC,WC+CXC,6MAhDbC,QAAUH,IAAMI,cAChBC,SAAWL,IAAMI,cACjBE,UAAYN,IAAMI,cAClBG,QAAUP,IAAMI,cAChBI,SAAWR,IAAMI,cAEjBK,WAAa,SAAAC,GAEXA,EAAMC,iBACN,IAAMvC,EAAO,CACXe,KAAMd,EAAK8B,QAAQS,QAAQC,MAC3BzB,MAAO0B,WAAWzC,EAAKgC,SAASO,QAAQC,OACxClC,OAAQN,EAAKiC,UAAUM,QAAQC,MAC/BE,KAAM1C,EAAKkC,QAAQK,QAAQC,MAC3BG,MAAO3C,EAAKmC,SAASI,QAAQC,OAE/BxC,EAAKC,MAAM2C,QAAQ7C,GAEnBsC,EAAMQ,cAAcC,iFAGpB,OACE3D,EAAAC,EAAAC,cAAA,QAAMC,UAAU,YAAYyD,SAAU5B,KAAKiB,YACzCjD,EAAAC,EAAAC,cAAA,SAAOyB,KAAK,OAAOkC,IAAK7B,KAAKW,QAASmB,KAAK,OAAOC,YAAY,SAC9D/D,EAAAC,EAAAC,cAAA,SACEyB,KAAK,QACLkC,IAAK7B,KAAKa,SACViB,KAAK,OACLC,YAAY,UAEd/D,EAAAC,EAAAC,cAAA,UAAQyB,KAAK,SAASkC,IAAK7B,KAAKc,WAC9B9C,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,aAAd,UACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,eAAd,cAGFrD,EAAAC,EAAAC,cAAA,YAAUyB,KAAK,OAAOkC,IAAK7B,KAAKe,QAASgB,YAAY,SACrD/D,EAAAC,EAAAC,cAAA,SACEyB,KAAK,QACLkC,IAAK7B,KAAKgB,SACVc,KAAK,OACLC,YAAY,UAEd/D,EAAAC,EAAAC,cAAA,UAAQ4D,KAAK,UAAb,sBA3CkBtB,IAAMC,mBCsDjBuB,6MArDbC,aAAe,SAAAf,GACbgB,QAAQC,IAAIjB,EAAMQ,cAAcL,OAGhC,IAAMe,EAAWlC,OAAAmC,EAAA,EAAAnC,CAAA,GACZrB,EAAKC,MAAMF,KADCsB,OAAAoC,EAAA,EAAApC,CAAA,GAEdgB,EAAMQ,cAAc/B,KAAOuB,EAAMQ,cAAcL,QAElDxC,EAAKC,MAAMyD,WAAW1D,EAAKC,MAAM0D,MAAOJ,4EAEjC,IAAArC,EAAAC,KACP,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,SACE4D,KAAK,OACLnC,KAAK,OACL8C,SAAUzC,KAAKiC,aACfZ,MAAOrB,KAAKlB,MAAMF,KAAKe,OAEzB3B,EAAAC,EAAAC,cAAA,SACE4D,KAAK,OACLnC,KAAK,QACL8C,SAAUzC,KAAKiC,aACfZ,MAAOrB,KAAKlB,MAAMF,KAAKgB,QAEzB5B,EAAAC,EAAAC,cAAA,UACE4D,KAAK,OACLnC,KAAK,SACL8C,SAAUzC,KAAKiC,aACfZ,MAAOrB,KAAKlB,MAAMF,KAAKO,QAEvBnB,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,aAAd,UACArD,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,eAAd,cAEFrD,EAAAC,EAAAC,cAAA,YACEyB,KAAK,OACL8C,SAAUzC,KAAKiC,aACfZ,MAAOrB,KAAKlB,MAAMF,KAAK2C,OAEzBvD,EAAAC,EAAAC,cAAA,SACE4D,KAAK,OACLnC,KAAK,QACL8C,SAAUzC,KAAKiC,aACfZ,MAAOrB,KAAKlB,MAAMF,KAAK4C,QAEzBxD,EAAAC,EAAAC,cAAA,UAAQ2B,QAAS,kBAAME,EAAKjB,MAAM4D,WAAW3C,EAAKjB,MAAM0D,SAAxD,uBA9CmBhC,IAAMC,WCsBlBkC,mLAnBJ,IAAA9D,EAAAmB,KACP,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC0E,EAAD,CAAanB,QAASzB,KAAKlB,MAAM2C,UAChCvB,OAAOC,KAAKH,KAAKlB,MAAMC,OAAOwB,IAAI,SAAA5B,GAAG,OACpCX,EAAAC,EAAAC,cAAC2E,EAAD,CACElE,IAAKA,EACL6D,MAAO7D,EACPC,KAAMC,EAAKC,MAAMC,MAAMJ,GACvB4D,WAAY1D,EAAKC,MAAMyD,WACvBG,WAAY7D,EAAKC,MAAM4D,uBAZXlC,IAAMC,WCyEf1B,EA5ED,CACZ+D,OAAQ,CACNnD,KAAM,SACN6B,MAAO,qBACPD,KACE,4EACF3B,MAAO,KACPT,OAAQ,aAGV4D,OAAQ,CACNpD,KAAM,SACN6B,MAAO,qBACPD,KACE,iFACF3B,MAAO,KACPT,OAAQ,aAGV6D,OAAQ,CACNrD,KAAM,aACN6B,MAAO,yBACPD,KAAM,qDACN3B,MAAO,KACPT,OAAQ,eAGV8D,OAAQ,CACNtD,KAAM,WACN6B,MAAO,uBACPD,KAAM,uDACN3B,MAAO,KACPT,OAAQ,aAGV+D,OAAQ,CACNvD,KAAM,WACN6B,MAAO,uBACPD,KAAM,oDACN3B,MAAO,IACPT,OAAQ,aAGVgE,OAAQ,CACNxD,KAAM,YACN6B,MAAO,uBACPD,KAAM,2CACN3B,MAAO,KACPT,OAAQ,aAGViE,OAAQ,CACNzD,KAAM,cACN6B,MAAO,oBACPD,KAAM,iDACN3B,MAAO,KACPT,OAAQ,aAGVkE,OAAQ,CACN1D,KAAM,SACN6B,MAAO,sBACPD,KAAM,wCACN3B,MAAO,IACPT,OAAQ,aAGVmE,OAAQ,CACN3D,KAAM,YACN6B,MAAO,wBACPD,KAAM,iEACN3B,MAAO,KACPT,OAAQ,cC/CGoE,mLAtBJ,IAAA1E,EAAAmB,KAAAwD,EACsCxD,KAAKlB,MAAM2E,QAAhDjC,EADDgC,EACChC,MAAO7B,EADR6D,EACQ7D,KAAMC,EADd4D,EACc5D,MAAO2B,EADrBiC,EACqBjC,KACtBrC,EAAyB,cAFxBsE,EAC2BrE,OAElC,OACEnB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACZH,EAAAC,EAAAC,cAAA,OAAKwF,IAAKlC,EAAOmC,IAAKhE,IACtB3B,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACXwB,EACD3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,SAASC,EAAYwB,KAEvC5B,EAAAC,EAAAC,cAAA,SAAIqD,GACJvD,EAAAC,EAAAC,cAAA,UACE0F,UAAW1E,EACXW,QAAS,kBAAMhB,EAAKC,MAAM+E,WAAWhF,EAAKC,MAAM0D,SAE/CtD,EAAc,eAAiB,qBAhBvBsB,IAAMC,oCCAnBqD,SAAcC,EAASC,cAAc,CACzCC,OAAQ,0CACRC,WAAY,gCACZC,YAAa,yCAOAC,EAJFC,IAAOC,YAAYR,EAAYS,YCmG7BC,6MAnGbC,MAAQ,CACN1F,MAAO,GACPE,MAAO,MAcTwC,QAAU,SAAA7C,GAER,IAAMG,EAAKmB,OAAAmC,EAAA,EAAAnC,CAAA,GAAQrB,EAAK4F,MAAM1F,OAE9BA,EAAK,OAAA2F,OAAQC,KAAKC,QAAWhG,EAE7BC,EAAKgG,SAAS,CAAE9F,aAGlBwD,WAAa,SAAC5D,EAAKyD,GAEjB,IAAMrD,EAAKmB,OAAAmC,EAAA,EAAAnC,CAAA,GAAQrB,EAAK4F,MAAM1F,OAE9BA,EAAMJ,GAAOyD,EAEbvD,EAAKgG,SAAS,CAAE9F,aAGlB2D,WAAa,SAAA/D,GAEX,IAAMI,EAAKmB,OAAAmC,EAAA,EAAAnC,CAAA,GAAQrB,EAAK4F,MAAM1F,OAE9BA,EAAMJ,GAAO,KAEbE,EAAKgG,SAAS,CAAE9F,aAGlB+F,gBAAkB,WAChBjG,EAAKgG,SAAS,CAAE9F,MAAOgG,OAGzBlB,WAAa,SAAAlF,GAEX,IAAMM,EAAKiB,OAAAmC,EAAA,EAAAnC,CAAA,GAAQrB,EAAK4F,MAAMxF,OAE9BA,EAAMN,GAAOM,EAAMN,GAAO,GAAK,EAE/BE,EAAKgG,SAAS,CAAE5F,aAGlBa,gBAAkB,SAAAnB,GAEhB,IAAMM,EAAKiB,OAAAmC,EAAA,EAAAnC,CAAA,GAAQrB,EAAK4F,MAAMxF,cAEvBA,EAAMN,GAEbE,EAAKgG,SAAS,CAAE5F,8FAxDhBe,KAAK6B,IAAMuC,EAAKY,UAAU,QAAS,CACjCC,QAASjF,KACTyE,MAAO,yDAKTL,EAAKc,cAAclF,KAAK6B,sCAoDjB,IAAA9B,EAAAC,KACP,OACEhC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACiH,EAAD,MACAnH,EAAAC,EAAAC,cAAA,UAAQ2B,QAASG,KAAK8E,iBAAtB,qBACA9G,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACX+B,OAAOC,KAAKH,KAAKyE,MAAM1F,OAAOwB,IAAI,SAAA5B,GAAG,OACpCX,EAAAC,EAAAC,cAACkH,EAAD,CACEzG,IAAKA,EACL6D,MAAO7D,EACP8E,QAAS1D,EAAK0E,MAAM1F,MAAMJ,GAC1BkF,WAAY9D,EAAK8D,iBAMzB7F,EAAAC,EAAAC,cAACmH,EAAD,CACEtG,MAAOiB,KAAKyE,MAAM1F,MAClBE,MAAOe,KAAKyE,MAAMxF,MAClBa,gBAAiBE,KAAKF,kBAExB9B,EAAAC,EAAAC,cAACoH,EAAD,CACE7D,QAASzB,KAAKyB,QACdc,WAAYvC,KAAKuC,WACjBG,WAAY1C,KAAK0C,WACjB3D,MAAOiB,KAAKyE,MAAM1F,gBA7FVyB,IAAMC,WCIJ8E,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO7H,EAAAC,EAAAC,cAAC4H,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.0f24ce84.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => (\r\n  <header className=\"top\">\r\n    <h4>Pizza World</h4>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-UK\", {\n    style: \"currency\",\n    currency: \"GBP\"\n  });\n}\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\nclass Order extends React.Component {\n  renderOrder = key => {\n    const item = this.props.items[key];\n    const count = this.props.order[key];\n    const isAvailable = item && item.status === \"available\";\n    const transitionOptions = {\n      classNames: \"order\",\n      key,\n      timeout: { enter: 500, exit: 500 }\n    };\n    // Make sure the item is loaded before  continue!\n    if (!item) return null;\n\n    if (!isAvailable) {\n      return (\n        <CSSTransition {...transitionOptions}>\n          <li key={key}>\n            Sorry {item ? item.name : \"item\"} is no longer available\n          </li>\n        </CSSTransition>\n      );\n    }\n    return (\n      <CSSTransition {...transitionOptions}>\n        <li key={key}>\n          <span>\n            <TransitionGroup component=\"span\" className=\"count\">\n              <CSSTransition\n                classNames=\"count\"\n                key={count}\n                timeout={{ enter: 500, exit: 500 }}\n              >\n                <span>{count}</span>\n              </CSSTransition>\n            </TransitionGroup>\n            pc {item.name}\n            {formatPrice(count * item.price)}\n            <button onClick={() => this.props.removeFromOrder(key)}>\n              &times;\n            </button>\n          </span>\n        </li>\n      </CSSTransition>\n    );\n  };\n  render() {\n    const orderIds = Object.keys(this.props.order);\n    const total = orderIds.reduce((prevTotal, key) => {\n      const item = this.props.items[key];\n      const count = this.props.order[key];\n      const isAvailable = item && item.status === \"available\";\n      if (isAvailable) {\n        return prevTotal + count * item.price;\n      }\n      return prevTotal;\n    }, 0);\n    return (\n      <div className=\"order-wrap\">\n        <h2>Order</h2>\n\n        <TransitionGroup component=\"ul\" className=\"order\">\n          {orderIds.map(this.renderOrder)}\n        </TransitionGroup>\n        <div className=\"total\">\n          Total:\n          <strong>{formatPrice(total)}</strong>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Order;\n","import React from \"react\";\n\nclass AddItemForm extends React.Component {\n  nameRef = React.createRef();\n  priceRef = React.createRef();\n  statusRef = React.createRef();\n  descRef = React.createRef();\n  imageRef = React.createRef();\n\n  createItem = event => {\n    // 1.  stop the form from submitting\n    event.preventDefault();\n    const item = {\n      name: this.nameRef.current.value,\n      price: parseFloat(this.priceRef.current.value),\n      status: this.statusRef.current.value,\n      desc: this.descRef.current.value,\n      image: this.imageRef.current.value\n    };\n    this.props.addItem(item);\n    // refresh the form\n    event.currentTarget.reset();\n  };\n  render() {\n    return (\n      <form className=\"item-edit\" onSubmit={this.createItem}>\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n        <input\n          name=\"price\"\n          ref={this.priceRef}\n          type=\"text\"\n          placeholder=\"Price\"\n        />\n        <select name=\"status\" ref={this.statusRef}>\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\n        <input\n          name=\"image\"\n          ref={this.imageRef}\n          type=\"text\"\n          placeholder=\"Image\"\n        />\n        <button type=\"submit\">+ Add Item</button>\n      </form>\n    );\n  }\n}\n\nexport default AddItemForm;\n","import React from \"react\";\n\nclass EditItemForm extends React.Component {\n  handleChange = event => {\n    console.log(event.currentTarget.value);\n    // update that item\n    // 1. Take a copy of the curernt item\n    const updatedItem = {\n      ...this.props.item,\n      [event.currentTarget.name]: event.currentTarget.value\n    };\n    this.props.updateItem(this.props.index, updatedItem);\n  };\n  render() {\n    return (\n      <div className=\"item-edit\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          onChange={this.handleChange}\n          value={this.props.item.name}\n        />\n        <input\n          type=\"text\"\n          name=\"price\"\n          onChange={this.handleChange}\n          value={this.props.item.price}\n        />\n        <select\n          type=\"text\"\n          name=\"status\"\n          onChange={this.handleChange}\n          value={this.props.item.status}\n        >\n          <option value=\"available\">Fresh!</option>\n          <option value=\"unavailable\">Sold Out!</option>\n        </select>\n        <textarea\n          name=\"desc\"\n          onChange={this.handleChange}\n          value={this.props.item.desc}\n        />\n        <input\n          type=\"text\"\n          name=\"image\"\n          onChange={this.handleChange}\n          value={this.props.item.image}\n        />\n        <button onClick={() => this.props.deleteItem(this.props.index)}>\n          Remove Item\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default EditItemForm;\n","import React from \"react\";\nimport AddItemForm from \"./AddItemForm\";\nimport EditItemForm from \"./EditItemForm\";\n\nclass Inventory extends React.Component {\n  render() {\n    return (\n      <div className=\"inventory\">\n        <h2>Inventory</h2>\n        <AddItemForm addItem={this.props.addItem} />\n        {Object.keys(this.props.items).map(key => (\n          <EditItemForm\n            key={key}\n            index={key}\n            item={this.props.items[key]}\n            updateItem={this.props.updateItem}\n            deleteItem={this.props.deleteItem}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// Sample data.\nconst items = {\n  pizza1: {\n    name: \"Cheese\",\n    image: \"/images/cheese.jpg\",\n    desc:\n      \"Everyone’s favorite white pizza. Only the best blend of cheese used.\",\n    price: 1224,\n    status: \"available\"\n  },\n\n  pizza2: {\n    name: \"Chilli\",\n    image: \"/images/chilli.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 1200,\n    status: \"available\"\n  },\n\n  pizza3: {\n    name: \"Margaritta\",\n    image: \"/images/margaritta.jpg\",\n    desc: \"Hand made cheese from Italy with the best tomatoes\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  pizza4: {\n    name: \"Mushroom\",\n    image: \"/images/mushroom.jpg\",\n    desc: \"4 types of mushrooms with our special garlic sauce. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  pizza5: {\n    name: \"Parmesam\",\n    image: \"/images/parmesam.jpg\",\n    desc: \"All time favorite classic now with organic cheese\",\n    price: 914,\n    status: \"available\"\n  },\n\n  pizza6: {\n    name: \"Pepperoni\",\n    image: \"/images/peperoni.jpg\",\n    desc: \"All time best seller and crows favorite.\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  pizza7: {\n    name: \"Stone baked\",\n    image: \"/images/stone.jpg\",\n    desc: \"For serious pizza lovers made by our head chef\",\n    price: 1843,\n    status: \"available\"\n  },\n\n  pizza8: {\n    name: \"Tomato\",\n    image: \"/images/tomatoe.jpg\",\n    desc: \"Tomatoes, cheese and crust, thats it.\",\n    price: 825,\n    status: \"available\"\n  },\n\n  pizza9: {\n    name: \"Vegetable\",\n    image: \"/images/vegetable.jpg\",\n    desc: \"Our vegetarian option with seasonal vegetables and cream souce\",\n    price: 1350,\n    status: \"available\"\n  }\n};\n\nexport default items;\n","import React from \"react\";\nimport { formatPrice } from \"../helpers\";\n\nclass Item extends React.Component {\n  render() {\n    const { image, name, price, desc, status } = this.props.details;\n    const isAvailable = status === \"available\";\n    return (\n      <li className=\"menu-item\">\n        <img src={image} alt={name} />\n        <h3 className=\"item-name\">\n          {name}\n          <span className=\"price\">{formatPrice(price)}</span>\n        </h3>\n        <p>{desc}</p>\n        <button\n          disabled={!isAvailable}\n          onClick={() => this.props.addToOrder(this.props.index)}\n        >\n          {isAvailable ? \"Add To Order\" : \"Sold Out!\"}\n        </button>\n      </li>\n    );\n  }\n}\n\nexport default Item;\n","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyAVzlUv3pKUnJ-pHUOc1ZeznXeavCRZCAY\",\n  authDomain: \"inventory-ivo.firebaseapp.com\",\n  databaseURL: \"https://inventory-ivo.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport { firebaseApp };\n\nexport default base;\n","import React from \"react\";\nimport Header from \"./Header\";\nimport Order from \"./Order\";\nimport Inventory from \"./Inventory\";\nimport sampleItems from \"../sample-items \";\nimport Item from \"./Item\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n  state = {\n    items: {},\n    order: {}\n  };\n\n  componentDidMount() {\n    this.ref = base.syncState(\"state\", {\n      context: this,\n      state: \"items\"\n    });\n  }\n\n  componentWillUnmount() {\n    base.removeBinding(this.ref);\n  }\n\n  addItem = item => {\n    // 1. Take a copy of the existing state\n    const items = { ...this.state.items };\n    // 2. Add our new item to that items variable\n    items[`item${Date.now()}`] = item;\n    // 3. Set the new items object to state\n    this.setState({ items });\n  };\n\n  updateItem = (key, updatedItem) => {\n    // 1. Take a copy of the current state\n    const items = { ...this.state.items };\n    // 2. Update that state\n    items[key] = updatedItem;\n    // 3. Set that to state\n    this.setState({ items });\n  };\n\n  deleteItem = key => {\n    // 1. take a copy of state\n    const items = { ...this.state.items };\n    // 2. update the state\n    items[key] = null;\n    // 3.  update state\n    this.setState({ items });\n  };\n\n  loadSampleItems = () => {\n    this.setState({ items: sampleItems });\n  };\n\n  addToOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. Either add to the order, or update the number in our order\n    order[key] = order[key] + 1 || 1;\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  removeFromOrder = key => {\n    // 1. take a copy of state\n    const order = { ...this.state.order };\n    // 2. remove that itemf from order\n    delete order[key];\n    // 3. Call setState to update our state object\n    this.setState({ order });\n  };\n\n  render() {\n    return (\n      <div className=\"container\">\n        <div className=\"menu\">\n          <Header />\n          <button onClick={this.loadSampleItems}>Load Sample Items</button>\n          <ul className=\"menu-items\">\n            {Object.keys(this.state.items).map(key => (\n              <Item\n                key={key}\n                index={key}\n                details={this.state.items[key]}\n                addToOrder={this.addToOrder}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <Order\n          items={this.state.items}\n          order={this.state.order}\n          removeFromOrder={this.removeFromOrder}\n        />\n        <Inventory\n          addItem={this.addItem}\n          updateItem={this.updateItem}\n          deleteItem={this.deleteItem}\n          items={this.state.items}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}